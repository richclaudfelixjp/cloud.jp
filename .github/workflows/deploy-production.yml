name: Deploy to Production
on:
  repository_dispatch:
    types: [e2e-test-complete]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  statuses: write
  issues: write

jobs:
  deploy-production:
    name: 本番環境デプロイ
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'repository_dispatch' && 
      github.event.client_payload.environment == 'staging' && 
      github.event.client_payload.test_result == 'passed') || 
      github.event_name == 'workflow_dispatch'
    environment: production
    
    steps:
      - name: デプロイ条件検証
        run: |
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            echo "✅ E2Eテスト成功により自動デプロイを開始"
            echo "🧪 テスト実行ID: ${{ github.event.client_payload.run_id }}"
          else
            echo "✅ 手動デプロイが要求されました"
          fi
          echo "⏰ デプロイ開始: $(date -u '+%Y-%m-%d %H:%M:%S') UTC"

      - name: Netlify本番環境にデプロイ
        id: deploy
        run: |
          DEPLOY_RESULT=$(curl -X POST -d {} "${{ secrets.NETLIFY_PROD_HOOK_URL }}" -s)
          echo "deploy_id=$(date +%s)" >> $GITHUB_OUTPUT
          echo "🚀 本番環境へのデプロイを開始"
          
      - name: デプロイ完了待機
        id: verify
        run: |
          echo "⏳ デプロイ完了を待機中..."
          sleep 45
          
          MAX_ATTEMPTS=12
          ATTEMPT=1
          SITE_URL="https://cloudjp.netlify.app"
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            if curl -f -s "$SITE_URL" > /dev/null; then
              echo "✅ 本番サイトが稼働中!"
              echo "status=success" >> $GITHUB_OUTPUT
              break
            fi
            
            echo "⏳ 試行 $ATTEMPT: サイト準備中、待機中..."
            
            if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
              echo "❌ デプロイ検証に失敗しました"
              echo "status=failure" >> $GITHUB_OUTPUT
              exit 1
            fi
            
            ATTEMPT=$((ATTEMPT+1))
            sleep 10
          done
          
      - name: 本番環境検証テスト実行
        if: steps.verify.outputs.status == 'success'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PLAYWRIGHT_REPO_TOKEN }}
          repository: richclaudfelixjp/Playwright-Project
          event-type: cloudjp-test
          client-payload: |
            {
              "environment": "production",
              "url": "https://cloudjp.netlify.app",
              "commit_sha": "${{ github.event.client_payload.commit_sha || github.sha }}",
              "branch": "${{ github.ref_name }}",
              "verification_only": true,
              "triggered_by": "${{ github.actor }}"
            }
            
      - name: デプロイ記録作成
        uses: actions/github-script@v7
        with:
          script: |
            const sha = '${{ github.event.client_payload.commit_sha }}' || '${{ github.sha }}';
            const timestamp = new Date().toISOString();
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `📦 本番環境デプロイ - ${timestamp.split('T')[0]}`,
              body: `
            ## 本番環境デプロイ詳細
            
            **デプロイID:** ${{ steps.deploy.outputs.deploy_id }}
            **デプロイ時刻:** ${timestamp}
            **実行者:** ${{ github.actor }}
            **コミット:** ${sha}
            **URL:** https://cloudjp.netlify.app
            
            ### 検証ステータス
            - 本番検証テスト: 実行中
            
            ### 関連変更
            - ${sha}
            `,
              labels: ['deployment', 'production']
            });
            
      - name: コミットステータス更新
        uses: actions/github-script@v7
        with:
          script: |
            const sha = '${{ github.event.client_payload.commit_sha }}' || '${{ github.sha }}';
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: 'success',
              target_url: 'https://cloudjp.netlify.app',
              description: '本番環境へのデプロイが正常完了',
              context: 'cloudjp/successful-deployment'
            });
            
      - name: 成功通知送信
        run: |
          echo "🎉 本番環境デプロイが正常完了!"
          echo "🌐 公開サイト: https://cloudjp.netlify.app"
          echo "📊 コミット: ${{ github.event.client_payload.commit_sha || github.sha }}"
          echo "🔗 リポジトリ: ${{ github.repository }}"
          echo "👤 デプロイ実行者: ${{ github.actor }}"
          echo "⏰ デプロイ時刻: $(date -u)"